{"version":3,"sources":["components/keyboard-button/index.jsx","components/select/index.jsx","assets/images/light_on.svg","App.js","index.js"],"names":["Button","props","className","colorName","buttonActive","buttonWidth","buttonHit","buttonKey","Select","state","value","localStorage","getItem","handleChange","bind","event","this","setState","target","createLocalLanguage","setItem","window","location","reload","name","onChange","optionEn","optionRu","React","Component","App","array","Object","assign","keyBoard","arrayKeyboard","keyboardFirstRow","keyboardSecondRow","keyboardThirdRow","keyboardFourthRow","keyboardFifthRow","arrayHeader","headerScoreText","headerTitleText","languageText","arrayMainContent","titleTop","titleBottom","link","arrayButtonsValue","getKeyboardValue","entries","map","item","push","getRandomButton","min","max","Math","floor","random","useState","scoreCounter","setScoreCounter","titleCounter","setTitleCounter","selectedButton","setSelectedButton","useEffect","onKeyPressed","pressedButton","keyCode","addEventListener","removeEventListener","Fragment","index","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAYeA,EARA,SAACC,GACZ,OACI,qBAAKC,UAAS,8BAAyBD,EAAME,UAA/B,yBAAyDF,EAAMG,aAA/D,gCAAmGH,EAAMI,YAAzG,YAAwHJ,EAAMK,WAA5I,SACI,mBAAGJ,UAAU,oBAAb,SAAkCD,EAAMM,e,qCCyBrCC,G,wDA3BX,WAAYP,GAAQ,IAAD,8BACf,cAAMA,IACDQ,MAAQ,CAAEC,MAAOC,aAAaC,QAAQ,YAAcD,aAAaC,QAAQ,YAAc,MAE5F,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAJL,E,gDAOnB,SAAaC,GACTC,KAAKC,SAAS,CAAEP,MAAOK,EAAMG,OAAOR,QACpCM,KAAKG,oBAAoBJ,EAAMG,OAAOR,S,iCAG1C,SAAoBA,GAChBC,aAAaS,QAAQ,WAAYV,GACjCW,OAAOC,SAASC,W,oBAGpB,WACI,OACI,yBAAQrB,UAAU,mBAAmBsB,KAAK,WAAWd,MAAOM,KAAKP,MAAMC,MAAOe,SAAUT,KAAKH,aAA7F,UACI,wBAAQX,UAAU,wCAAwCQ,MAAM,KAAhE,SAAsEM,KAAKf,MAAMyB,WACjF,wBAAQxB,UAAU,wCAAwCQ,MAAM,KAAhE,SAAsEM,KAAKf,MAAM0B,kB,GAtB5EC,IAAMC,Y,GCJZ,I,WCuKAC,MA9Jf,WACE,IAAIC,EAAQC,OAAOC,OAAO,GAAIC,EAAQ,IA4BK,OAArCvB,aAAaC,QAAQ,YACvBmB,EAAQC,OAAOC,OAAO,GAAIC,EAAQ,IACY,OAArCvB,aAAaC,QAAQ,cAC9BmB,EAAQC,OAAOC,OAAO,GAAIC,EAAQ,KA3BtC,IAAIC,EAAgBJ,EAAK,SACrBK,EAAmBD,EAAc,aACjCE,EAAoBF,EAAc,cAClCG,EAAmBH,EAAc,aACjCI,EAAoBJ,EAAc,cAClCK,EAAmBL,EAAc,aAEjCM,EAAcV,EAAK,OACnBW,EAAkBD,EAAW,gBAC7BE,EAAkBF,EAAW,gBAC7BG,EAAeH,EAAW,aAC1Bf,EAAWe,EAAW,SACtBd,EAAWc,EAAW,SAEtBI,EAAmBd,EAAK,YACxBe,EAAWD,EAAgB,SAC3BE,EAAcF,EAAgB,YAG9BG,EADcjB,EAAK,OACD,KAElBkB,EAAoB,GAgBxB,SAASC,EAAiBnB,GACxBC,OAAOmB,QAAQpB,GAAOqB,KAAI,SAACC,GAAD,OACxBrB,OAAOmB,QAAQE,EAAK,IAAID,KAAI,SAACC,GAAD,OAC1BJ,EAAkBK,KAAKD,EAAK,GAAG,GAAR,eAS7B,SAASE,EAAgBxB,GACvB,IALwByB,EAAKC,EAM7B,OAAO1B,GANiByB,EAKY,EALPC,EAKU,GAJhCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,IAfvDN,EAAiBd,GACjBc,EAAiBb,GACjBa,EAAiBZ,GACjBY,EAAiBX,GACjBW,EAAiBV,GAmBjB,IACA,EAAsCZ,IAAMiC,SAA4C,IAAlClD,aAAaC,QAAQ,SAAkBD,aAAaC,QAAQ,SAAW,GAA7H,mBAAKkD,EAAL,KAAmBC,EAAnB,KACA,EAAwCnC,IAAMiC,SAAS,GAAvD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA4CrC,IAAMiC,SAASN,EAAgBN,IAA3E,mBAAOiB,EAAP,KAAuBC,EAAvB,KA2BA,OAzBAvC,IAAMwC,WAAU,WACd,IAAMC,EAAe,SAACtD,GACpB,IAAIuD,EAAgBvD,EAAMwD,QAEtBD,GAAiBJ,GACnBC,EAAkBZ,EAAgBN,IAElCgB,EADUD,EAAe,IAEhBM,IAAkBJ,IACvBF,EAAeF,IACjBC,EAAgBC,GAChBrD,aAAaS,QAAQ,QAAS4C,IAEhCC,EAAgB,GACN,IAMd,OAFA5C,OAAOmD,iBAAiB,UAAWH,GAE5B,WACLhD,OAAOoD,oBAAoB,UAAWJ,OAKxC,cAAC,IAAMK,SAAP,UACE,sBAAKxE,UAAU,UAAf,UACE,yBAAQA,UAAU,SAAlB,UACE,sBAAKA,UAAU,gBAAf,UACE,mBAAGA,UAAU,0BAAb,SAAwCwC,IACxC,mBAAGxC,UAAU,sBAAb,SAAoC4D,OAEtC,sBAAK5D,UAAU,gBAAf,UACE,oBAAIA,UAAU,0BAAd,SAAyCyC,IACzC,oBAAIzC,UAAU,sBAAd,SAAqC8D,OAEvC,qBAAK9D,UAAU,oBAAf,SAIE,sBAAKA,UAAU,WAAf,UACE,mBAAGA,UAAU,sBAAb,SAAoC0C,IACpC,cAAC,EAAD,CAAQlB,SAAUA,EAAUC,SAAUA,YAI5C,0BAASzB,UAAU,eAAnB,UACE,oBAAIA,UAAU,mDAAd,SAAkE4C,IAClE,sBAAK5C,UAAU,WAAf,UACE,qBAAKA,UAAU,qBAAf,SACG8B,OAAOmB,QAAQf,GAAkBgB,KAAI,SAACC,EAAMsB,GAAP,OACpC3C,OAAOmB,QAAQE,EAAK,IAAID,KAAI,SAACC,GAAD,OAC1B,cAAC,EAAD,CAAQlD,UAAWkD,EAAK,GAAG,GAAR,SAAwB9C,UAAW8C,EAAK,GAAgBhD,YAA0B,QAAZgD,EAAK,IAA4B,SAAZA,EAAK,GAAiB,KAAoB,SAAZA,EAAK,IAA6B,UAAZA,EAAK,GAAkB,MAAqB,UAAZA,EAAK,IAA8B,WAAZA,EAAK,GAAmB,MAAQ,KAAMjD,aAAe8D,GAAkBb,EAAK,GAAG,GAAR,QAAyBA,EAAK,GAAG,GAAR,SAAyB,IAA9QsB,WAI1E,qBAAKzE,UAAU,qBAAf,SACG8B,OAAOmB,QAAQd,GAAmBe,KAAI,SAACC,EAAMsB,GAAP,OACrC3C,OAAOmB,QAAQE,EAAK,IAAID,KAAI,SAACC,GAAD,OAC1B,cAAC,EAAD,CAAQlD,UAAWkD,EAAK,GAAG,GAAR,SAAwB9C,UAAW8C,EAAK,GAAgBhD,YAA0B,QAAZgD,EAAK,IAA4B,SAAZA,EAAK,GAAiB,KAAoB,SAAZA,EAAK,IAA6B,UAAZA,EAAK,GAAkB,MAAqB,UAAZA,EAAK,IAA8B,WAAZA,EAAK,GAAmB,MAAQ,KAAMjD,aAAe8D,GAAkBb,EAAK,GAAG,GAAR,QAAyBA,EAAK,GAAG,GAAR,SAAyB,IAA9QsB,WAI1E,qBAAKzE,UAAU,qBAAf,SACG8B,OAAOmB,QAAQb,GAAkBc,KAAI,SAACC,EAAMsB,GAAP,OACpC3C,OAAOmB,QAAQE,EAAK,IAAID,KAAI,SAACC,GAAD,OAC1B,cAAC,EAAD,CAAQlD,UAAWkD,EAAK,GAAG,GAAR,SAAwB9C,UAAW8C,EAAK,GAAgBhD,YAA0B,QAAZgD,EAAK,IAA4B,SAAZA,EAAK,GAAiB,KAAoB,SAAZA,EAAK,IAA6B,UAAZA,EAAK,GAAkB,MAAqB,UAAZA,EAAK,IAA8B,WAAZA,EAAK,GAAmB,MAAQ,KAAMjD,aAAe8D,GAAkBb,EAAK,GAAG,GAAR,QAAyBA,EAAK,GAAG,GAAR,SAAyB,IAA9QsB,WAI1E,qBAAKzE,UAAU,qBAAf,SACG8B,OAAOmB,QAAQZ,GAAmBa,KAAI,SAACC,EAAMsB,GAAP,OACrC3C,OAAOmB,QAAQE,EAAK,IAAID,KAAI,SAACC,GAAD,OAC1B,cAAC,EAAD,CAAQlD,UAAWkD,EAAK,GAAG,GAAR,SAAwB9C,UAAW8C,EAAK,GAAgBhD,YAA0B,QAAZgD,EAAK,IAA4B,SAAZA,EAAK,GAAiB,KAAoB,SAAZA,EAAK,IAA6B,UAAZA,EAAK,GAAkB,MAAqB,UAAZA,EAAK,IAA8B,WAAZA,EAAK,GAAmB,MAAQ,KAAMjD,aAAe8D,GAAkBb,EAAK,GAAG,GAAR,QAAyBA,EAAK,GAAG,GAAR,SAAyB,IAA9QsB,WAI1E,qBAAKzE,UAAU,qBAAf,SACG8B,OAAOmB,QAAQX,GAAkBY,KAAI,SAACC,EAAMsB,GAAP,OACpC3C,OAAOmB,QAAQE,EAAK,IAAID,KAAI,SAACC,GAAD,OAC1B,cAAC,EAAD,CAAQlD,UAAWkD,EAAK,GAAG,GAAR,SAAwB9C,UAAW8C,EAAK,GAAgBhD,YAA0B,QAAZgD,EAAK,IAA4B,SAAZA,EAAK,GAAiB,KAAoB,SAAZA,EAAK,IAA6B,UAAZA,EAAK,GAAkB,MAAqB,UAAZA,EAAK,IAA8B,WAAZA,EAAK,GAAmB,MAAQ,KAAMjD,aAAe8D,GAAkBb,EAAK,GAAG,GAAR,QAAyBA,EAAK,GAAG,GAAR,SAAyB,IAA9QsB,cAK5E,oBAAIzE,UAAU,sDAAd,SAAqE6C,OAEvE,wBAAQ7C,UAAU,SAAlB,SAA2B,mBAAGA,UAAU,OAAO0E,KAAK,2CAA2C1D,OAAO,SAA3E,SAAqF8B,YC3JxH6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.f7a240ef.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './button.scss';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <div className={`button button_color_${props.colorName} button_color_${props.buttonActive}_active button_width_${props.buttonWidth} ${props.buttonHit}`}>\r\n            <p className=\"text button__text\">{props.buttonKey}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport './select.scss';\r\n\r\nclass Select extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: localStorage.getItem('language') ? localStorage.getItem('language') : 'En'};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ value: event.target.value });\r\n        this.createLocalLanguage(event.target.value);\r\n    }\r\n\r\n    createLocalLanguage(value) {\r\n        localStorage.setItem('language', value);\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <select className=\"language__select\" name=\"language\" value={this.state.value} onChange={this.handleChange}>\r\n                <option className=\"select__option select__option_English\" value=\"En\">{this.props.optionEn}</option>\r\n                <option className=\"select__option select__option_Russian\" value=\"Ru\">{this.props.optionRu}</option>\r\n            </select>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Select;","export default __webpack_public_path__ + \"static/media/light_on.ea2ec3e8.svg\";","import React from 'react';\nimport Button from './components/keyboard-button';\nimport Select from './components/select';\n\nimport lightOn from './assets/images/light_on.svg';\nimport keyBoard from './assets/arrays/keyboard.json';\n\nimport './style.scss';\n\nfunction App() {\n  let array = Object.assign({}, keyBoard['En']);\n\n  setLanguage();\n\n  let arrayKeyboard = array['keyboard'];\n  let keyboardFirstRow = arrayKeyboard['first-row'];\n  let keyboardSecondRow = arrayKeyboard['second-row'];\n  let keyboardThirdRow = arrayKeyboard['third-row'];\n  let keyboardFourthRow = arrayKeyboard['fourth-row'];\n  let keyboardFifthRow = arrayKeyboard['fifth-row'];\n\n  let arrayHeader = array['header'];\n  let headerScoreText = arrayHeader['headerScoreText'];\n  let headerTitleText = arrayHeader['headerTitleText'];\n  let languageText = arrayHeader['languageText'];\n  let optionEn = arrayHeader['optionEn'];\n  let optionRu = arrayHeader['optionRu'];\n\n  let arrayMainContent = array['mainContent'];\n  let titleTop = arrayMainContent['titleTop'];\n  let titleBottom = arrayMainContent['titleBottom'];\n\n  let arrayFooter = array['footer'];\n  let link = arrayFooter['link'];\n\n  let arrayButtonsValue = [];\n\n  function setLanguage() {\n    if (localStorage.getItem('language') === 'En') {\n      array = Object.assign({}, keyBoard['En']);\n    } else if (localStorage.getItem('language') === 'Ru') {\n      array = Object.assign({}, keyBoard['Ru']);\n    }\n  }\n\n  getKeyboardValue(keyboardFirstRow);\n  getKeyboardValue(keyboardSecondRow);\n  getKeyboardValue(keyboardThirdRow);\n  getKeyboardValue(keyboardFourthRow);\n  getKeyboardValue(keyboardFifthRow);\n\n  function getKeyboardValue(array) {\n    Object.entries(array).map((item) => (\n      Object.entries(item[1]).map((item) => (\n        arrayButtonsValue.push(item[1][1]['keyCode'])\n      ))\n    ))\n  }\n\n  function getRandomNumbers(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  function getRandomButton(array) {\n    let randomNumber = getRandomNumbers(0, 54);\n    return array[randomNumber]\n  }\n\n  let counter = 0;\n  let [scoreCounter, setScoreCounter] = React.useState((localStorage.getItem('score') !== 0) ? localStorage.getItem('score') : 0);\n  const [titleCounter, setTitleCounter] = React.useState(0);\n  const [selectedButton, setSelectedButton] = React.useState(getRandomButton(arrayButtonsValue));\n\n  React.useEffect(() => {\n    const onKeyPressed = (event) => {\n      let pressedButton = event.keyCode;\n\n      if (pressedButton == selectedButton) {\n        setSelectedButton(getRandomButton(arrayButtonsValue));\n        counter = titleCounter + 1;\n        setTitleCounter(counter);\n      } else if (pressedButton !== selectedButton) {\n        if (titleCounter > scoreCounter) {\n          setScoreCounter(titleCounter);\n          localStorage.setItem('score', titleCounter);\n        }\n        setTitleCounter(0);\n        counter = 0;\n      }\n    };\n\n    window.addEventListener('keydown', onKeyPressed);\n\n    return () => {\n      window.removeEventListener('keydown', onKeyPressed);\n    }\n  });\n\n  return (\n    <React.Fragment>\n      <div className=\"wrapper\">\n        <header className=\"header\">\n          <div className=\"header__score\">\n            <p className=\"text header-score__text\">{headerScoreText}</p>\n            <p className=\"text score__counter\">{scoreCounter}</p>\n          </div>\n          <div className=\"header__title\">\n            <h1 className=\"text header-title__text\">{headerTitleText}</h1>\n            <h1 className=\"text title__counter\">{titleCounter}</h1>\n          </div>\n          <div className=\"header__user-menu\">\n            {/* <div className=\"theme\">\n            <img className=\"theme__image\" src={lightOn} alt=\"Выключить свет\" />\n          </div> */}\n            <div className=\"language\">\n              <p className=\"text language__text\">{languageText}</p>\n              <Select optionEn={optionEn} optionRu={optionRu} />\n            </div>\n          </div>\n        </header>\n        <section className=\"main-content\">\n          <h2 className=\"text main-content__title main-content__title_top\">{titleTop}</h2>\n          <div className=\"keyboard\">\n            <div className=\"row keyboard__row1\">\n              {Object.entries(keyboardFirstRow).map((item, index) => (\n                Object.entries(item[1]).map((item) => (\n                  <Button colorName={item[1][0]['keyColor']} buttonKey={item[0]} key={index} buttonWidth={(item[0] === \"Tab\" || item[0] === \"Back\") ? '96' : (item[0] === \"Caps\" || item[0] === \"Enter\") ? '117' : (item[0] === \"Shift\" || item[0] === \"RShift\") ? '154' : '64'} buttonActive={(selectedButton == item[1][1]['keyCode']) ? item[1][0]['keyColor'] : ''} />\n                ))\n              ))}\n            </div>\n            <div className=\"row keyboard__row2\">\n              {Object.entries(keyboardSecondRow).map((item, index) => (\n                Object.entries(item[1]).map((item) => (\n                  <Button colorName={item[1][0]['keyColor']} buttonKey={item[0]} key={index} buttonWidth={(item[0] === \"Tab\" || item[0] === \"Back\") ? '96' : (item[0] === \"Caps\" || item[0] === \"Enter\") ? '117' : (item[0] === \"Shift\" || item[0] === \"RShift\") ? '154' : '64'} buttonActive={(selectedButton == item[1][1]['keyCode']) ? item[1][0]['keyColor'] : ''} />\n                ))\n              ))}\n            </div>\n            <div className=\"row keyboard__row3\">\n              {Object.entries(keyboardThirdRow).map((item, index) => (\n                Object.entries(item[1]).map((item) => (\n                  <Button colorName={item[1][0]['keyColor']} buttonKey={item[0]} key={index} buttonWidth={(item[0] === \"Tab\" || item[0] === \"Back\") ? '96' : (item[0] === \"Caps\" || item[0] === \"Enter\") ? '117' : (item[0] === \"Shift\" || item[0] === \"RShift\") ? '154' : '64'} buttonActive={(selectedButton == item[1][1]['keyCode']) ? item[1][0]['keyColor'] : ''} />\n                ))\n              ))}\n            </div>\n            <div className=\"row keyboard__row4\">\n              {Object.entries(keyboardFourthRow).map((item, index) => (\n                Object.entries(item[1]).map((item) => (\n                  <Button colorName={item[1][0]['keyColor']} buttonKey={item[0]} key={index} buttonWidth={(item[0] === \"Tab\" || item[0] === \"Back\") ? '96' : (item[0] === \"Caps\" || item[0] === \"Enter\") ? '117' : (item[0] === \"Shift\" || item[0] === \"RShift\") ? '154' : '64'} buttonActive={(selectedButton == item[1][1]['keyCode']) ? item[1][0]['keyColor'] : ''} />\n                ))\n              ))}\n            </div>\n            <div className=\"row keyboard__row5\">\n              {Object.entries(keyboardFifthRow).map((item, index) => (\n                Object.entries(item[1]).map((item) => (\n                  <Button colorName={item[1][0]['keyColor']} buttonKey={item[0]} key={index} buttonWidth={(item[0] === \"Tab\" || item[0] === \"Back\") ? '96' : (item[0] === \"Caps\" || item[0] === \"Enter\") ? '117' : (item[0] === \"Shift\" || item[0] === \"RShift\") ? '154' : '64'} buttonActive={(selectedButton == item[1][1]['keyCode']) ? item[1][0]['keyColor'] : ''} />\n                ))\n              ))}\n            </div>\n          </div>\n          <h2 className=\"text main-content__title main-content__title_bottom\">{titleBottom}</h2>\n        </section>\n        <footer className=\"footer\"><a className=\"text\" href=\"https://codepen.io/evilpaper/pen/dyyZjLQ\" target=\"_blank\">{link}</a></footer>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}